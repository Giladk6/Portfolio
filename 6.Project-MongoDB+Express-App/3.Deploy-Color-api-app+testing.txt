1.kubectl apply -f color-api-deployment.yaml
2.kubectl apply -f color-svc.yaml (nodePort 30006)

Testing API requests using postman:

Testing API calls:
GET http://k8s-node1.local:30006/
GET http://k8s-node1.local:30006/api
GET http://k8s-node1.local:30006/api/color
GET http://k8s-node1.local:30006/api/color/primary


Posting data into DB colordb:
POST http://k8s-node1.local:30006/api/color/primary
{
  "value": "red"
}

Verify that the data is written to the database:
GET http://k8s-node1.local:30006/api?colorKey=primary


Posting data into DB colordb:
POST http://k8s-node1.local:30006/api/color/secondary
{
  "value": "orange"
}


Verify that the data is written to the database:
GET http://k8s-node1.local:30006/api?colorKey=secondary

---------------------------------------------------

3.Scale Deployment:
kubectl scale deployment color-api --replicas=3
kubectl get pod -l app=color-api

4.Deploy traffic-generator:
kubectl apply -f traffic-generator.yaml

**Watch the logs to see 3 pods receiving traffic
kubectl logs traffic-generator -f

in Postman:
POST http://k8s-master1.local:30006/api/color/primary
{
  "value": "yellow"
}

**Watch the traffic-generator pod logs to see the primary color changing to yellow.

kubectl delete -f traffic-generator.yaml
